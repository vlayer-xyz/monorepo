import { describe, expect, it } from 'vitest';
import { TX_OFFSETS, encodeTx } from './encode.js';
import { loadTxFixture } from '../../../fixtures.js';
import { TRANSFER_TX_HASH, CHAIN_LINK_TRANSFER_TX_HASH } from '../../../fixtures/config.js';

describe('TransactionOracle encode', () => {
  describe('encodeTx', () => {
    it('transaction with empty data', async () => {
      const contractCreationTransaction = await loadTxFixture('mainnet', 'cancun', 'transfer', TRANSFER_TX_HASH);
      const noirTransaction = encodeTx(contractCreationTransaction);

      expect(noirTransaction[TX_OFFSETS.DATA]).toStrictEqual([]);

      expect(noirTransaction[TX_OFFSETS.NONCE]).toStrictEqual('0x');
      expect(noirTransaction[TX_OFFSETS.GAS_LIMIT]).toStrictEqual('0x5a3c');
      // prettier-ignore
      expect(noirTransaction[TX_OFFSETS.TO]).toStrictEqual([
        '0xac','0xd8','0x8b','0xe8','0x98','0xea','0x10','0xe6','0x6c','0x74',
        '0x42','0xc4','0xc2','0x5d','0x2c','0x2d','0x90','0x7b','0x5b','0x0d'
      ]);
      expect(noirTransaction[TX_OFFSETS.TO_IS_SOME]).toStrictEqual('0x01');
      expect(noirTransaction[TX_OFFSETS.VALUE]).toStrictEqual('0x038d7ea4c68000');
      expect(noirTransaction[TX_OFFSETS.DATA_LEN]).toStrictEqual('0x02');
      expect(noirTransaction[TX_OFFSETS.V]).toStrictEqual('0x');
      // prettier-ignore
      expect(noirTransaction[TX_OFFSETS.R]).toStrictEqual([
        '0xd7','0x6a','0xdd','0x0e','0x65','0xa1','0xfa','0x2e','0x49','0x79',
        '0x79','0xea','0x8e','0x12','0xe6','0x4a','0x9a','0x70','0x0c','0x23',
        '0x84','0x40','0xb7','0x66','0x1d','0x9a','0x91','0x8d','0x72','0x32',
        '0xf8','0xba'
      ]);
      // prettier-ignore
      expect(noirTransaction[TX_OFFSETS.S]).toStrictEqual([
        '0x18','0x6d','0xac','0x38','0xbe','0x37','0x83','0x88','0x3d','0xbd',
        '0x76','0x8b','0x8c','0xd6','0xba','0x18','0xb1','0xc5','0xf1','0xd2',
        '0x30','0xef','0x20','0x8c','0xb1','0x49','0xf0','0x13','0x28','0x10',
        '0x7e','0x8f'
      ]);
    });

    it('transaction with non-empty data', async () => {
      const contractCreationTransaction = await loadTxFixture(
        'mainnet',
        'cancun',
        'small_block',
        CHAIN_LINK_TRANSFER_TX_HASH
      );
      const noirTransaction = encodeTx(contractCreationTransaction);

      expect(noirTransaction[TX_OFFSETS.NONCE]).toStrictEqual('0x485a');
      expect(noirTransaction[TX_OFFSETS.GAS_LIMIT]).toStrictEqual('0x0493e0');
      // prettier-ignore
      expect(noirTransaction[TX_OFFSETS.TO]).toStrictEqual([
        '0x51','0x49','0x10','0x77','0x1a','0xf9','0xca','0x65','0x6a','0xf8',
        '0x40','0xdf','0xf8','0x3e','0x82','0x64','0xec','0xf9','0x86','0xca'
      ]);
      expect(noirTransaction[TX_OFFSETS.TO_IS_SOME]).toStrictEqual('0x01');
      expect(noirTransaction[TX_OFFSETS.VALUE]).toStrictEqual('0x');
      // prettier-ignore
      expect(noirTransaction[TX_OFFSETS.DATA]).toStrictEqual([
        '0xa9','0x05','0x9c','0xbb','0x00','0x00','0x00','0x00','0x00','0x00',
        '0x00','0x00','0x00','0x00','0x00','0x00','0x12','0x5f','0x66','0x02',
        '0x39','0x70','0x7c','0x9d','0xe3','0x46','0x2d','0x3f','0xa6','0x33',
        '0xf2','0x72','0x3a','0xd0','0xb8','0x84','0x00','0x00','0x00','0x00',
        '0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00',
        '0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x00','0x3f',
        '0x44','0x12','0x7f','0xb4','0x3f','0xa1','0x00','0x00'
      ]);
      expect(noirTransaction[TX_OFFSETS.DATA_LEN]).toStrictEqual('0x8a');
      expect(noirTransaction[TX_OFFSETS.V]).toStrictEqual('0x01');
      // prettier-ignore
      expect(noirTransaction[TX_OFFSETS.R]).toStrictEqual([
        '0x15','0xe6','0x11','0x34','0x16','0xb7','0x94','0xb1','0x1a','0x4e',
        '0x5f','0xbc','0xcd','0x99','0x08','0x1f','0xee','0xec','0xc4','0xd2',
        '0x13','0xe8','0x3b','0xee','0x92','0x23','0x70','0xb9','0xb5','0xc0',
        '0xd8','0x4a'
      ]);
      // prettier-ignore
      expect(noirTransaction[TX_OFFSETS.S]).toStrictEqual([
        '0x45','0x0f','0x27','0x76','0x50','0xe5','0xb7','0x2e','0x45','0x95',
        '0xd1','0xd9','0x86','0xdc','0x05','0x69','0x61','0xf1','0xaa','0xbd',
        '0x4c','0x9e','0xb5','0xa5','0x51','0xd0','0xf4','0x86','0xd8','0x18',
        '0x66','0xf7'
      ]);
    });
  });
});
