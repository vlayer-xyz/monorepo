import { buildFastifyApp } from './app.js';

import { describe, it, expect, afterAll } from 'vitest';

describe('Oracle Server', () => {
  const app = buildFastifyApp();
  afterAll(() => {
    app.close();
  });

  it('should handle get_header request', async () => {
    const response = await app.inject({
      method: 'POST',
      url: '/',
      payload: {
        method: 'get_header',
        params: [{ Single: { inner: '0000000000000000000000000000000000000000000000000000000000d895ce' } }],
        id: 2,
        jsonrpc: '2.0'
      }
    });

    expect(response.statusCode).toBe(200);
    expect(response.body).toMatchSnapshot();
  });

  it('should handle get_account request', async () => {
    const response = await app.inject({
      method: 'POST',
      url: '/',
      payload: {
        method: 'get_account',
        params: [
          { Single: { inner: '0000000000000000000000000000000000000000000000000000000000d895ce' } },
          {
            Array: [
              { inner: '00000000000000000000000000000000000000000000000000000000000000b4' },
              { inner: '000000000000000000000000000000000000000000000000000000000000007e' },
              { inner: '000000000000000000000000000000000000000000000000000000000000003c' },
              { inner: '00000000000000000000000000000000000000000000000000000000000000d8' },
              { inner: '0000000000000000000000000000000000000000000000000000000000000037' },
              { inner: '00000000000000000000000000000000000000000000000000000000000000dd' },
              { inner: '00000000000000000000000000000000000000000000000000000000000000f8' },
              { inner: '00000000000000000000000000000000000000000000000000000000000000e4' },
              { inner: '00000000000000000000000000000000000000000000000000000000000000c5' },
              { inner: '000000000000000000000000000000000000000000000000000000000000007f' },
              { inner: '0000000000000000000000000000000000000000000000000000000000000005' },
              { inner: '00000000000000000000000000000000000000000000000000000000000000d7' },
              { inner: '000000000000000000000000000000000000000000000000000000000000000a' },
              { inner: '00000000000000000000000000000000000000000000000000000000000000b8' },
              { inner: '0000000000000000000000000000000000000000000000000000000000000065' },
              { inner: '00000000000000000000000000000000000000000000000000000000000000de' },
              { inner: '000000000000000000000000000000000000000000000000000000000000006e' },
              { inner: '0000000000000000000000000000000000000000000000000000000000000019' },
              { inner: '000000000000000000000000000000000000000000000000000000000000003b' },
              { inner: '00000000000000000000000000000000000000000000000000000000000000bb' }
            ]
          }
        ],
        id: 2,
        jsonrpc: '2.0'
      }
    });

    expect(response.statusCode).toBe(200);
    expect(response.body).toMatchSnapshot();
  });
});
