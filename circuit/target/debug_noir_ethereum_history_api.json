{"debug_symbols":[{"locations":{"0":[{"span":{"start":109,"end":197},"file":1}],"1":[{"span":{"start":210,"end":228},"file":1}],"0.16":[{"span":{"start":210,"end":228},"file":1}],"0.17":[{"span":{"start":210,"end":228},"file":1}],"0.18":[{"span":{"start":254,"end":297},"file":0}]}}],"file_map":{"0":{"source":"struct Dupa {\n    a: Field,\n    b: Field,\n}\n\n\n#[oracle(get_account)]\nunconstrained fn get_account_oracle(block_no: Field, account: str<42>, dupa: Dupa) -> Dupa {}\n\nunconstrained fn get_account(block_no: Field, account: str<42>, dupa: Dupa) -> Dupa {\n    get_account_oracle(block_no, account, dupa)\n}\n","path":"/Users/marek/Projects/noir-ethereum-history-api/circuit/src/get_account.nr"},"1":{"source":"mod get_account;\nuse crate::get_account::{get_account, Dupa};\n\nfn main(block_no: pub Field) {\n    let dupa = get_account(18800000, \"0xe9c3123e4cf348c66b20a985af264891fc0a441a\", Dupa {a: 17, b: 39});\n    assert(dupa.a == block_no);\n}\n\n/// TODO: Use mocks\n// #[test]\n// fn test_main() {\n//     main(1);\n// }\n","path":"/Users/marek/Projects/noir-ethereum-history-api/circuit/src/main.nr"}},"warnings":[]}