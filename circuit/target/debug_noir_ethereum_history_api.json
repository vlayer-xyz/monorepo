{"debug_symbols":[{"locations":{"42":[{"span":{"start":152,"end":182},"file":1}],"43":[{"span":{"start":195,"end":213},"file":1}],"42.13":[{"span":{"start":195,"end":213},"file":1}],"42.14":[{"span":{"start":195,"end":213},"file":1}],"42.15":[{"span":{"start":269,"end":306},"file":0}]}}],"file_map":{"0":{"source":"struct Account {\n    balance: Field,\n    codeHash: Field,\n    nonce: Field,\n}\n\n#[oracle(get_account)]\nunconstrained fn get_account_oracle(block_no: Field, address: str<42>) -> Account {}\n\nunconstrained fn get_account(block_no: Field, address: str<42>) -> Account {\n    get_account_oracle(block_no, address)\n}\n","path":"/Users/marek/Projects/noir-ethereum-history-api/circuit/src/get_account.nr"},"1":{"source":"mod get_account;\nuse crate::get_account::{get_account, Account};\n\nfn main(block_no: pub Field, address: pub str<42>) -> pub Account {\n    let account = get_account(18800000, address);\n    assert(account.nonce == 0); // Temporary test\n    account\n}\n","path":"/Users/marek/Projects/noir-ethereum-history-api/circuit/src/main.nr"}},"warnings":[{"Warning":{"ReturnConstant":{"call_stack":[{"span":{"start":238,"end":245},"file":1}]}}}]}