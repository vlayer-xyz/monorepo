import { describe, expect, it } from 'vitest';
import { calculateBlockHash, calculateBlockHeaderHash, headerToRlpFields, blockToHeader } from './blockHeader.js';
import { loadBlockFixture, loadBlockFixtures } from '../historyAPIFixtures.js';

describe('calculateBlockHeaderHash', async () => {
  const blocks = await loadBlockFixtures(false);
  for (const block of blocks) {
    it(`block #${block.number}`, () => {
      const header = blockToHeader(block);
      expect(calculateBlockHeaderHash(header)).toBe(block.hash);
    });
  }
});

describe('headerToRlpFields', () => {
  it('frontier block', async () => {
    const block = await loadBlockFixture('mainnet', 'frontier', 'first', false);
    const header = blockToHeader(block);
    expect(headerToRlpFields(header)).toMatchInlineSnapshot(`
      [
        "0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3",
        "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
        "0x05a56e2d52c817161883f50c441c3228cfe54d9f",
        "0xd67e4d450343046425ae4271474353857ab860dbc0a1dde64b41b5cd3a532bf3",
        "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
        "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
        "0x
        "0x3ff800000",
        "0x1",
        "0x1388",
        "0x",
        "0x55ba4224",
        "0x476574682f76312e302e302f6c696e75782f676f312e342e32",
        "0x969b900de27b6ac6a67742365dd65f55a0526c41fd18e1b16f1a1215c2e66f59",
        "0x539bd4979fef1ec4",
      ]
    `);
  });

  it('london block', async () => {
    const block = await loadBlockFixture('mainnet', 'london', 'crypto_punks', false);
    const header = blockToHeader(block);
    expect(headerToRlpFields(header)).toMatchInlineSnapshot(`
      [
        "0x1315c9495925503b99fe391c5190b03c928b0afa5eba257f093e825604bd4d56",
        "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
        "0x1ad91ee08f21be3de0ba2ba6918e714da6b45836",
        "0xd78d4f182ebd7f0dc86c5b328b73f9ea3dfe17ee56fbb490d9b67edac48e2b04",
        "0xffadf2a50d8aa20e19c37ea385864998231e6524d200425f076479629cb20d9c",
        "0xbcb477e406f547e79f0bcc5406f60fbba70cf12b874fbdd646cb6c1e81d64db1",
        "0xc320000000021204803045c1800512044102d0080e00110001852a204cd001970800e0028080805000084100004201040381848008008b88824a88000230260d34083880002201400b84040a140006280090620000620420101a3580804438400b09300503aa0a0220001e8110000a92200a4238083a44006200411006000281300014000eae10c03058a4104793100c150088010084048a0e080242001000000a90980806180800000400d00001440440801000440009108100110758851b404050042a483408016710020042020310041000010009049000190546046229001911a20c004080881026002664222ac500810058b40000460002d88008400000",
        "0x2e2632952e3202",
        "0xd895ce",
        "0x1c9c380",
        "0x924c6f",
        "0x62083b47",
        "0x486976656f6e2065752d68656176792d32",
        "0xb1ee7558e23d1014b70be22081b602661492bef5b5211b42d7fe84dbf34cde36",
        "0x331f32cd8d3536b1",
        "0xa22bc31c8",
      ]
    `);
  });

  it('paris block', async () => {
    const block = await loadBlockFixture('mainnet', 'paris', 'usdc_circle', false);
    const header = blockToHeader(block);
    expect(headerToRlpFields(header)).toMatchInlineSnapshot(`
      [
        "0x759e27a5069535949f0a7247ebc999367dbd77964d77ed004ffc8db3d4940248",
        "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
        "0x95222290dd7278aa3ddd389cc1e1d165cc4bafe5",
        "0x1ad7b80af0c28bc1489513346d2706885be90abb07f23ca28e50482adb392d61",
        "0x410d8efe973613f9463bb25a0c71ccb52b264842f4874510d70dd748fbbeb0b6",
        "0x44dbbbb92e053ec5030657cf7e854062602a7dbad7890fb43c01009d1d39faf5",
        "0x81a101008600144d8040180c8c2840027104a0d80031c6f9028b61055022063e4556d43e84a0087802a00608378509003a83ca9cfd1420245eed68d217280b016086100945109e1bbc614b28a248a1a2d881e19700c408aa02803d30c92d02c07c811d100200ab4f05e9502102240842a0890868a80084cbc96009d3040c4d09221d83da8911054c305c62422a0cd128b75240834312c6dea00110c04a18b034062068801bc02880899010c00a535d98753580c830ae81003d8529741108825b525030de0a082448090a8846480f991013e1820a448024551559205e44b5a0020050a9014a14d0a0004c20780aa08c31745eb688421c50540418c04361424c4d",
        "0x",
        "0x121eac0",
        "0x1c9c380",
        "0x92afc9",
        "0x65a2e1c3",
        "0x6265617665726275696c642e6f7267",
        "0xb45e3fdbc1a41216ad07ac931215c5d6df190217efade280d1825c4a667ad203",
        "0x0000000000000000",
        "0x4abff88bc",
        "0x5ef785b1e235d0641dded9d2c3fd5c501002d353101ed0f53434881d5ca49286",
      ]
    `);
  });

  it('cancun block', async () => {
    const block = await loadBlockFixture('mainnet', 'cancun', 'small_block', false);
    const header = blockToHeader(block);
    expect(headerToRlpFields(header)).toMatchInlineSnapshot(`
      [
        "0x1a92e56fecc003df22483edae9df2c162d4cefb4a0021507d77474b85eaa011a",
        "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
        "0x229b8325bb9ac04602898b7e8989998710235d5f",
        "0x292508fa90c87a73e7ad2a64380bc8b209ed07d4aa9087ef2dbca4365d640b69",
        "0x072ea72725b7bc3693f41fe5e07d8109918c02fc76a125fa6e25c8f9acb68958",
        "0xf470a81ee134b6d421ae6e46c7fa53760571e50c6bf6db0fafe8ccd20e1256dc",
        "0x0020000000000020020000008000100000820004000002000200000002000004000000004000000002000002080000001200000108202040000000200020000000000418000100184900000800008024000000000040000010000040c020400000000001000020000400800301000000000020000000040080800010000800000000010000020080000000000000000000000001080000880000004080000000020000000000000040000000080080000000000000000000000000008000000000000002041000400000000000180004000000000000101001008082000000000014200000000040010000010000000000001004000020400001000002080000",
        "0x",
        "0x12884e1",
        "0x1c9c380",
        "0xabc87",
        "0x65f2d207",
        "0x492063616e2068617a20626c6f636b3f",
        "0xa32c17db8cce6069c09f259c48f9685eb2490edfb0b78a2a5f2ea3fc4a0fb3e9",
        "0x0000000000000000",
        "0xb252c2981",
        "0xd3d07be0060cb1457f82e14b7682728af5ee8fcd95c08517ba59173babe35d56",
        "0x",
        "0x",
        "0xb2c1b0e6281bbc96d8d1645f10a07b4ab315696e851f77faeca3ef8727c10938",
      ]
    `);
  });

  it('cancun block with blobGasUsed', async () => {
    const block = await loadBlockFixture('mainnet', 'cancun', 'with_blob', false);
    const header = blockToHeader(block);
    expect(headerToRlpFields(header)).toMatchInlineSnapshot(`
      [
        "0x6fe207caaab375cfec0e45c97480906ebe7bd86b1369ad1ca554d2d76d491af0",
        "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
        "0x95222290dd7278aa3ddd389cc1e1d165cc4bafe5",
        "0xd90b2cdebb309531ffaf490d9e05a7188e971bac19750575970442a143de60d7",
        "0x9cc9310db8727e8857b8094d78918f22b6efaf1dc583c62bb5750a5b419db1c5",
        "0x0dd9a2a414de87c28624e4ad4ae96e7b9b8ef23611d9bb13db81e62fecada84d",
        "0x136b976b6ffe6f7e76bdc7f7bfc1ea7135dfed7f7ef56bb27e85d9befe7bd6867df695bfe9f6bd3676bdbb45f51e51ad8ef3e27abbbee8e4f5ffbbf5a9beaa799eeffffd416e8f5beffafdfef777e5adc6db3eb6feeb5feb27bf577efdfd58f7dff75c3fab770dba2ec955f55806ec7feabd4eff5a7c365e9fefd4dfaf7b6d7fdb6b9fdded3ffdfde479ba4b7fbd7f77563b1bd3ffbf80ceee299cfffef9f93c7f6d2d270aedef471cde55c69fddff3d375767f0ffbf3bc4ffff7f7f79ed1f4fd3bc1dfe4cdfcb06fb57aab36bfffef2fa74c7ff7ffffef43f9d5f5ff9f2ec7fdf3abfdc3fbdb0fc9afefc8b6491ebfbf77bbc66fffa23fdf799fbdbdfdf7fef",
        "0x",
        "0x1288297",
        "0x1c9c380",
        "0x1c9a4cb",
        "0x65f2b65f",
        "0x6265617665726275696c642e6f7267",
        "0x50cd2d56a0ac10e3e92af89fd43f25c6605c4630078aa178e13ffc0588de17b6",
        "0x0000000000000000",
        "0xa0b27eab3",
        "0x5a9a69147e2b09fa1bb42f84c23c5178cf1b104d168b48e028458226a5bf9435",
        "0x40000",
        "0x",
        "0x40e83de29f62e0613451cae06c5c0753edf6acb32fcb85b2f5e7b3f1bfb87f97",
      ]
    `);
  });
});

describe('calculateBlockHash', async () => {
  const blocks = await loadBlockFixtures(false);
  for (const block of blocks) {
    it(`block #${block.number}`, () => {
      expect(calculateBlockHash(block)).toBe(block.hash);
    });
  }
});
