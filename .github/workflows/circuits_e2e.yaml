name: Circuits E2E Tests

on: [push, merge_group]

jobs:
  test:
    name: Circuits E2E Tests
    runs-on:
      group: Default Larger Runners
    environment: CI
    env:
      ETHEREUM_JSON_RPC_API_URL: ${{ secrets.ETHEREUM_JSON_RPC_API_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Enable Corepack and Install Yarn 4
        run: |
          corepack enable
          yarn set version latest

      - name: Install Dependencies
        run: yarn install

      - name: Install Nargo
        uses: noir-lang/noirup@v0.1.3
        with:
          toolchain: 0.31.0

      - name: Compile Circuit
        run: |
          nargo compile --package get_header --deny-warnings
          nargo compile --package get_account --deny-warnings
          nargo compile --package get_storage --deny-warnings
          nargo compile --package get_storage_recursive --deny-warnings
          nargo compile --package get_receipt --deny-warnings
          nargo compile --package get_transaction --deny-warnings
          nargo compile --package get_log --deny-warnings
          nargo compile --package is_dao_worthy --deny-warnings
          nargo compile --package is_ape_owner --deny-warnings

          # We cannot use the `--deny-warnings` option in `is_dao_worthy_recursive` because the `verify_proof` method generates warnings 
          # that are actually informational messages from the compiler and cannot be ignored.
          nargo compile --package is_dao_worthy_recursive

      - name: Start Oracle Server
        working-directory: ethereum/oracles
        run: |
          yarn oracle-server &
          ORACLE_SERVER_PID=$!
          echo "ORACLE_SERVER_PID=$ORACLE_SERVER_PID" >> $GITHUB_ENV

      - name: Generate Proof
        run: |
          nargo prove --package get_header --oracle-resolver=http://localhost:5555
          nargo prove --package get_account --oracle-resolver=http://localhost:5555
          nargo prove --package get_storage --oracle-resolver=http://localhost:5555
          nargo prove --package get_receipt --oracle-resolver=http://localhost:5555
          nargo prove --package get_transaction --oracle-resolver=http://localhost:5555
          nargo prove --package get_log --oracle-resolver=http://localhost:5555
          nargo prove --package is_dao_worthy --oracle-resolver=http://localhost:5555
          nargo prove --package is_ape_owner --oracle-resolver=http://localhost:5555

      - name: Generate verification key for recursive proof
        working-directory: ethereum/oracles
        run: |
          # Verification key generation uses Barretenberg backend located at ~/.nargo/backends/acvm-backend-barretenberg/backend_binary. 
          # It is automatically installed during the execution of the `nargo prove` command in previous step.
          yarn generate-get-storage-vk

      - name: Generate Recursive Proof
        run: |
          export NARGO_FOREIGN_CALL_TIMEOUT=100000 # miliseconds
          nargo prove --package is_dao_worthy_recursive --oracle-resolver=http://localhost:5555

      - name: Verify Proof
        run: |
          nargo verify --package get_header
          nargo verify --package get_account
          nargo verify --package get_storage
          nargo verify --package get_receipt
          nargo verify --package get_transaction
          nargo verify --package get_log
          nargo verify --package is_dao_worthy
          nargo verify --package is_ape_owner

      - name: Stop Oracle Server
        if: always()
        run: kill $ORACLE_SERVER_PID
